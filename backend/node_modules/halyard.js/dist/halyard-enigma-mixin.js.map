{"version":3,"file":"halyard-enigma-mixin.js","sources":["../src/enigma-mixin/utils.js","../src/enigma-mixin/halyard-enigma-mixin.js"],"sourcesContent":["/**\n * @public\n * @param {{qThousandSep: string, qDecimalSep: string, qMoneyThousandSep: string, qMoneyDecimalSep: string, qMoneyFmt: string,\n * qTimeFmt: string, qDateFmt: string, qTimestampFmt: string, qFirstWeekDay: string, qReferenceDay: string,\n * qFirstMonthOfYear: string, qCollation: string, qMonthNames: string,\n * qLongMonthNames: string, qDayNames: string, qLongDayNames: string }} localInfoData\n * @returns {{ThousandSep: string, DecimalSep: string, MoneyThousandSep: string, MoneyDecimalSep: string,\n * MoneyFormat: string, TimeFormat: string, DateFormat: string, TimestampFormat: string, FirstWeekDay: string,\n * ReferenceDay: string, FirstMonthOfYear: string, CollationLocale: string, MonthNames: string, LongMonthNames: string,\n * DayNames: string, LongDayNames: string}}\n */\nexport default function convertQixGetLocalInfo(localInfoData) {\n  return {\n    ThousandSep: localInfoData.qThousandSep,\n    DecimalSep: localInfoData.qDecimalSep,\n    MoneyThousandSep: localInfoData.qMoneyThousandSep,\n    MoneyDecimalSep: localInfoData.qMoneyDecimalSep,\n    MoneyFormat: localInfoData.qMoneyFmt,\n    TimeFormat: localInfoData.qTimeFmt,\n    DateFormat: localInfoData.qDateFmt,\n    TimestampFormat: localInfoData.qTimestampFmt,\n    FirstWeekDay: localInfoData.qFirstWeekDay,\n    ReferenceDay: localInfoData.qReferenceDay,\n    FirstMonthOfYear: localInfoData.qFirstMonthOfYear,\n    CollationLocale: localInfoData.qCollation,\n    MonthNames: localInfoData.qCalendarStrings.qMonthNames,\n    LongMonthNames: localInfoData.qCalendarStrings.qLongMonthNames,\n    DayNames: localInfoData.qCalendarStrings.qDayNames,\n    LongDayNames: localInfoData.qCalendarStrings.qLongDayNames,\n  };\n}\n","import convertQixGetLocalInfo from './utils';\n\nconst CONNECTION_ERROR = 'Connection Error';\nconst LOADING_ERROR = 'Loading Error';\nconst SYNTAX_ERROR = 'Syntax Error';\n/**\n * Create error message\n * @private\n * @param {string} errorType\n * @param {object} qixError\n * @param {(Table|HyperCube)} item\n * @returns {{type: string, message: string, item: object, qixError: string}}\n */\nfunction createErrorMessage(errorType, qixError, item) {\n  return {\n    type: errorType,\n    message: qixError.message || qixError.qErrorString,\n    item,\n    qixError,\n  };\n}\n\nconst halyardMixin = {\n  types: 'Global',\n  init(args) {\n    if (args.config) {\n      args.api.Promise = args.config.Promise;\n    } else {\n      args.api.Promise = args.Promise;\n    }\n  },\n  extend: {\n    /**\n     * Creates a session app based on the model in the halyard instance\n     * @public\n     * @param {Halyard} halyard - A halyard instance\n     * @returns {Promise.<TResult>}\n     */\n    createSessionAppUsingHalyard(halyard) {\n      const that = this;\n      return that.createSessionApp().then(app => that.setScriptAndReloadWithHalyard(app, halyard, false));\n    },\n\n    /**\n     * Creates an app with the model in the halyard instance.\n     * @public\n     * @param {string} appName\n     * @param {Halyard} halyard\n     * @returns {Promise.<TResult>}\n     */\n    createAppUsingHalyard(appName, halyard) {\n      const that = this;\n      return that.createApp(appName).then((app) => {\n        const appId = app.qAppId;\n        return that.openDoc(appId).then(result => that.setScriptAndReloadWithHalyard(result, halyard, true));\n      });\n    },\n\n    /**\n     * Reloads an existing app with the model in the halyard instance. Can also create an app is createIfMissing is set to true.\n     * @public\n     * @param {string} existingAppName\n     * @param {Halyard} halyard\n     * @param {boolean} createIfMissing\n     * @returns {Promise.<TResult>}\n     */\n    reloadAppUsingHalyard(existingAppName, halyard, createIfMissing) {\n      const that = this;\n      return that.openDoc(existingAppName)\n        .catch((error) => {\n          const COULD_NOT_FIND_APP = 1003;\n\n          if (createIfMissing && error.code === COULD_NOT_FIND_APP) {\n            return that.createApp(existingAppName).then(app => that.openDoc(app.qAppId));\n          }\n          return that.Promise.reject(error);\n        })\n        .then(result => that.setScriptAndReloadWithHalyard(result, halyard, true));\n    },\n\n    /**\n     * Use the model in halyard to set the script of an app and save it\n     * @public\n     * @param {object} app\n     * @param {Halyard} halyard\n     * @param {boolean} doSaveAfterReload\n     * @returns {Promise.<TResult>}\n     */\n    setScriptAndReloadWithHalyard(app, halyard, doSaveAfterReload) {\n      const that = this;\n      const deferredConnections = [];\n\n      halyard.getConnections().forEach((connection) => {\n        const qixConnectionObject = connection.getQixConnectionObject();\n        if (qixConnectionObject) {\n          const connectionPromise = app.createConnection(qixConnectionObject)\n            .then(result => result, (err) => {\n              const LOCERR_CONNECTION_ALREADY_EXISTS = 2000;\n\n              // Will not throw error if connection already exists.\n              // The connections guid makes the connections unique and we assumes that it\n              // is the same that was previously created\n              if (!(err.code && err.code === LOCERR_CONNECTION_ALREADY_EXISTS)) {\n                throw createErrorMessage(CONNECTION_ERROR, err, connection);\n              }\n            });\n\n          deferredConnections.push(connectionPromise);\n        }\n      });\n\n      return that.Promise.all(deferredConnections).then(() => app.getLocaleInfo().then((localeInfoResult) => {\n        halyard.setDefaultSetStatements(convertQixGetLocalInfo(localeInfoResult), true);\n        return app.globalApi.configureReload(true, true, false).then(() => app.setScript(halyard.getScript())\n          .then(() => app.doReload().then(() => app.globalApi.getProgress(0).then((progressResult) => {\n            if (progressResult.qErrorData.length !== 0) {\n              return app.checkScriptSyntax().then((syntaxCheckData) => {\n                if (syntaxCheckData.length === 0) {\n                  throw createErrorMessage(LOADING_ERROR, progressResult.qErrorData[0]);\n                } else {\n                  const item = halyard.getItemThatGeneratedScriptAt(syntaxCheckData[0].qTextPos);\n                  throw createErrorMessage(SYNTAX_ERROR, progressResult.qErrorData[0], item);\n                }\n              });\n            }\n\n            if (doSaveAfterReload) {\n              return app.doSave().then(() => app);\n            }\n\n            return app;\n          }))));\n      }));\n    },\n  },\n};\n\n\nconst exposeGlobalApi = {\n  types: 'Doc',\n  init(args) {\n    const getObjectArgs = {\n      handle: -1,\n      id: 'Global',\n      type: 'Global',\n    };\n    if (args.config) {\n      getObjectArgs.genericType = 'Global';\n    } else {\n      getObjectArgs.customType = 'Global';\n      getObjectArgs.delta = true;\n    }\n    args.api.globalApi = args.api.session.getObjectApi(getObjectArgs);\n  },\n};\n\nmodule.exports = [halyardMixin, exposeGlobalApi];\n"],"names":[],"mappings":"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"}